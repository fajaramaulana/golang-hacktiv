{
    "swagger": "2.0",
    "info": {
        "description": "Sample API Spec for Orders",
        "title": "Orders API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Fajar",
            "email": "fajar@gmail.com"
        },
        "version": "v1.0"
    },
    "host": "localhost:8081",
    "basePath": "/",
    "paths": {
        "/people": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Get all people",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.GetAllPeopleSuccess"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.GetAllPeopleFailNotFound"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Create new people",
                "parameters": [
                    {
                        "description": "People",
                        "name": "people",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.CreatePersonSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/views.CreatePersonFail"
                        }
                    }
                }
            }
        },
        "/people/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Get person by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Person ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.GetPersonByIdSuccess"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.GetPersonByIdNotFound"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Update person by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Person ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Person",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.UpdatePersonSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/views.UpdatePersonFail"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Delete person by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Person ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.DeletePersonSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/views.DeletePersonFail"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Person": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "views.CreatePersonFail": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "ADD_PEOPLE_FAIL"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "views.CreatePersonSuccess": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string",
                    "example": "CREATE_PERSON_SUCCESS"
                },
                "payload": {
                    "$ref": "#/definitions/models.Person"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "views.DeletePersonFail": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "DELETE_PERSON_FAIL"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "views.DeletePersonSuccess": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string",
                    "example": "DELETE_PERSON_SUCCESS"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "views.GetAllPeopleFailNotFound": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "GET_PEOPLE_FAIL"
                },
                "status": {
                    "type": "integer",
                    "example": 404
                }
            }
        },
        "views.GetAllPeopleSuccess": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string",
                    "example": "GET_PEOPLE_SUCCESS"
                },
                "payload": {
                    "$ref": "#/definitions/models.Person"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "views.GetPersonByIdNotFound": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "record not found"
                },
                "message": {
                    "type": "string",
                    "example": "GET_PERSON_FAIL"
                },
                "status": {
                    "type": "integer",
                    "example": 404
                }
            }
        },
        "views.GetPersonByIdSuccess": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string",
                    "example": "GET_PERSON_BY_ID_SUCCESS"
                },
                "payload": {
                    "$ref": "#/definitions/models.Person"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "views.UpdatePersonFail": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "UPDATE_PERSON_FAIL"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "views.UpdatePersonSuccess": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string",
                    "example": "UPDATE_PERSON_SUCCESS"
                },
                "payload": {
                    "$ref": "#/definitions/models.Person"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        }
    }
}